%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

%% == Core ==

%% Additional library directories to add to the code path
{lib_dirs, []}.

%% == Erlang Compiler ==

%% Erlang files to compile before the rest. Rebar automatically compiles
%% parse_transforms and custom behaviours before anything other than the files
%% in this list.

%% Erlang compiler options
%% Opts: fail_on_warning
{erl_opts, [warn_unused_vars, warn_unused_import, warn_exported_vars,
        debug_info, {i, "include"}, {d, debug}]}.

%% MIB Options?
%{mib_opts, [{group_check, false}]}.
{mib_opts, []}.

%% SNMP mibs to compile first?
{mib_first_files, []}.

%% == EUnit ==

%% Options for eunit:test()
{eunit_opts, []}.

%% Additional compile options for eunit. erl_opts from above is also used
%{eunit_compile_opts, [{src_dirs, ["test"]}]}.

%% Whether to enable coverage reporting. Default is `false'
{cover_enabled, false}.

%% Whether to print coverage report to console. Default is `false'
{cover_print_enabled, false}.

%% == Dialyzer ==

%% Options for running the dialyzer, right now only `plt' is supported
{dialyzer_opts, []}.

%% == Cleanup ==

%% Which files to cleanup
{clean_files, ["rel/erl_crash.dump"]}.

%% == Reltool ==

%% Target directory for the release
{target, "target"}.

%% == OTP Applications ==

%% Binaries to link into the erlang path?
{app_bin, []}.

%% Enable validation of the OTP app module list. Default is 'true'
{validate_app_modules, true}.

%% == Subdirectories ==

%% Subdirectories?
{sub_dirs, ["rel"]}.
